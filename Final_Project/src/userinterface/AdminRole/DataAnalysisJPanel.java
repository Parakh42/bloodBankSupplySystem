/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdminRole;

import business.Enterprise.Enterprise;
import business.Organization.DonorOrganization;
import business.Organization.Organization;
import business.EcoSystem;
import business.Network.Network;
import business.Organization.LabOrganization;
import business.Organization.NutritionistOrganization;
import static business.Organization.Organization.Type.Donor;
import business.Person.Donor;
import business.Person.VitalSigns;
import business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author piyush sharma
 */
public class DataAnalysisJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DataAnalysisJPanel
     */
    public JPanel userProcessContainer;
    public Enterprise enterprise;
    public Organization organization;
    public EcoSystem ecosystem;
    

    public DataAnalysisJPanel(JPanel userProcessContainer, Enterprise enterprise, Organization organization, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.organization = organization;
        this.ecosystem = ecosystem;
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        donorGenderButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        networkBtn = new javax.swing.JButton();
        donorHealthBtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        donorGenderButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        donorGenderButton.setText("Donor(gender)");
        donorGenderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donorGenderButtonActionPerformed(evt);
            }
        });
        add(donorGenderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 126, -1, -1));

        backButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, -1, -1));

        networkBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        networkBtn.setText("Network");
        networkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkBtnActionPerformed(evt);
            }
        });
        add(networkBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 200, 145, -1));

        donorHealthBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        donorHealthBtn.setText("Donor Health");
        donorHealthBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donorHealthBtnActionPerformed(evt);
            }
        });
        add(donorHealthBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 275, 145, -1));

        jButton4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton4.setText("Vital Signs");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 349, 145, -1));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel1.setText("Data analysis");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 16, 331, 46));
    }// </editor-fold>//GEN-END:initComponents

    private void donorGenderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donorGenderButtonActionPerformed
        // TODO add your handling code here:
        int m=0, f=0;
        
        for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(org instanceof DonorOrganization){
            for(Donor donor : org.getDonorDirectory().getDonorList())
            {
                
            if(donor.getGender().equalsIgnoreCase("male")){
               m++;
            }
            if(donor.getGender().equalsIgnoreCase("female")){
                f++;
            }
        }
            }
        }
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(m, "Number", "Male");
        dataset.setValue(f, "Number", "Female");
        
        JFreeChart chart = ChartFactory.createBarChart("Donors", "Gender", "Number", dataset,PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        
        ChartFrame frame = new ChartFrame("Availability Bar Chart", chart);
        
        frame.setVisible(true);
        frame.setSize(450,500);
        
//       panel.removeAll();
//        panel.add(frame, BorderLayout.CENTER);
//        panel.validate();
    }//GEN-LAST:event_donorGenderButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void networkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkBtnActionPerformed
        // TODO add your handling code here:
       int count1 =0, count2 =0, count3 =0;
        
        for(Network network: ecosystem.getNetworkList()){
          String name = network.getName();
          if(name.equalsIgnoreCase("boston")){
          for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
              
              for(Donor donor : enterprise.getDonorDirectory().getDonorList()){
                  
                 count1 = count1 + 1;
              }
          } 
          }
        
          if(name.equalsIgnoreCase("newyork")){
          for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
              
              for(Donor donor : enterprise.getDonorDirectory().getDonorList()){
                  
                 count2 = count2 + 1;
              }
          } 
          }
        
          if(name.equalsIgnoreCase("chicago")){
          for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
              
              for(Donor donor : enterprise.getDonorDirectory().getDonorList()){
                  
                 count3 = count3 + 1;
              }
          } 
          }
        
        }
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(count1, "Number", "boston");
        dataset.setValue(count2, "Number", "newyork");
        dataset.setValue(count3, "Number", "chicago");
        
        
        JFreeChart chart = ChartFactory.createBarChart("Networks", "Networks", "Donors", dataset,PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        
        ChartFrame frame = new ChartFrame("Network Information", chart);
        
        frame.setVisible(true);
        frame.setSize(450,500);
        
        
    }//GEN-LAST:event_networkBtnActionPerformed

    private void donorHealthBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donorHealthBtnActionPerformed
        // TODO add your handling code here:
        int count =0;
        int count1 =0;
        
        for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()){
            
        if (org instanceof NutritionistOrganization) {
            for(WorkRequest request : org.getWorkQueue().getWorkRequestList()){
              count = count+1;   
            }
        }
          if(org instanceof LabOrganization){
              for(WorkRequest request : org.getWorkQueue().getWorkRequestList()){
                  count1++;
              }
          }
        
         }
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(count, "Number", "unfit");
        dataset.setValue(count1, "Number", "fit");
        
        
        JFreeChart chart = ChartFactory.createBarChart("Donors", "Donor", "Number", dataset,PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        
        ChartFrame frame = new ChartFrame("Donor Information", chart);
        
        frame.setVisible(true);
        frame.setSize(450,500);
        
    }//GEN-LAST:event_donorHealthBtnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int haemo = 0, bp=0, weight=0, temp=0;
        
        
        for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(org instanceof DonorOrganization){
            for(Donor donor : org.getDonorDirectory().getDonorList())
            {
               for(VitalSigns vs: donor.getVsh().getVitalSignHistory()){
                   if(vs.getHaemoglobinLevel()<13 ){
                   haemo++;
                   }
                   if(vs.getBloodPressure()<80 || vs.getBloodPressure()>120 ){
                   bp++;
                   }
                   if(vs.getWeight()<110 || vs.getWeight()>400 ){
                   weight++;
                   }
                   if(vs.getTemperature()<90 ||vs.getTemperature()>99){
                   temp++;
                   }
        }
            }
            }
        }
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(haemo, "Number", "haemoglobin");
        dataset.setValue(bp, "Number", "bloodpressure");
        dataset.setValue(weight, "Number", "weight");
        dataset.setValue(temp, "Number", "temperature");
        
        
        JFreeChart chart = ChartFactory.createBarChart("VitalSigns", "VitalSigns", "Quantity", dataset,PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        
        ChartFrame frame = new ChartFrame("Donor Information", chart);
        
        frame.setVisible(true);
        frame.setSize(450,500);
        
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton donorGenderButton;
    private javax.swing.JButton donorHealthBtn;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton networkBtn;
    // End of variables declaration//GEN-END:variables
}
